name: CI/CD ajedrezpown

on:
  push:
    branches: [ main ]

jobs:
  deploy_api:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2 SpeechAPI
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME_API : ${{ secrets.HOSTNAME_API  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          sudo echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          sudo ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME_API} '
            # Now we have got the access of EC2 and we will start the deploy
            cd /home/ubuntu/ajedrezpown/ &&
            git checkout main &&
            git fetch --all && git reset --hard origin/main &&
            git pull origin main &&
            
            # Run SpeechAPI
            sudo docker compose up -d
          '
          
  deploy_bot1:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2 bot1
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME_BOT1 : ${{ secrets.HOSTNAME_BOT1  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          sudo echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          sudo ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME_BOT1} '
            # Now we have got the access of EC2 and we will start the deploy
            cd /home/ubuntu/ajedrezpown/ &&
            git checkout main &&
            git fetch --all && git reset --hard origin/main &&
            git pull origin main &&
            
            # Run SpeechAPI
            sudo docker build -t interactionhandler ./InteractionHandler/
            sudo docker run -p 80:80 interactionhandler
          '
